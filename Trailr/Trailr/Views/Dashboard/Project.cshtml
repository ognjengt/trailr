@using Trailr.Models
@{
    ViewBag.Title = "Project";
    Layout = "~/Views/Shared/Layout.cshtml";
}
@{
    string id;
    var user = (UserAccount)Session["user"];
    try
    {
        id = Html.ViewContext.RouteData.Values["id"].ToString();
        <div ng-app="App" ng-controller="ProjectController">
            <!--Nav bar-->
            <nav class="navbar navbar-default no-margin">
                <div class="container-fluid">
                    <!-- Brand and toggle get grouped for better mobile display -->
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <a class="navbar-brand" href="#">Trailr</a>
                    </div>

                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                        <ul class="nav navbar-nav">
                            <li><a href="/Dashboard"><b>Projects</b> <span class="sr-only">(current)</span></a></li>
                            <li><a href="#"><b>Drugi</b></a></li>
                        </ul>
                        <ul class="nav navbar-nav navbar-right">
                            <li><a href="#"><b>@user.FullName</b></a></li>
                            <li><a href="/Account/LogOut"><b>Logout</b></a></li>
                        </ul>
                    </div><!-- /.navbar-collapse -->
                </div><!-- /.container-fluid -->
            </nav>
            
            <header>
                <h1>{{project.Title}}</h1>
            </header>

            <div class="stopwatch" ng-click="handleStopwatch()">
                {{project.TimeSpent}}
            </div>
            {{time}}
        </div>
    }
    catch (Exception)
    {

        <p>Null je</p>
    }
}

